CREATE TYPE LEAGUE AS ENUM (
  'FRANCE_LIGUE_1',
  'FRANCE_LIGUE_2',
  'MEXICO_LIGA_MX',
  'MEXICO_ASCENSO_MX',
  'UNITED_STATES_MAJOR_LEAGUE_SOCCER'
);
CREATE TYPE ORIGIN_TYPE AS ENUM (
  'PLAY',
  'CORNER',
  'PASS',
  'FREE_KICK',
  'PENALTY_KICK',
  'THROW_IN',
  'GOAL_KICK'
);
CREATE TYPE PASS_TYPE AS ENUM (
  'GROUND',
  'CROSS',
  'THROUGH',
  'LOB',
  'AIR'
);
CREATE TYPE CARD_TYPE AS ENUM (
  'RED',
  'YELLOW'
);
CREATE TYPE TOUCH_TYPE AS ENUM (
  'RIGHT_FOOT',
  'LEFT_FOOT',
  'HEAD'
);
CREATE TYPE RECOVERY_TYPE AS ENUM (
  'INTERCEPTION',
  'DUEL',
  'TACKLE'
);
CREATE TYPE SAVE_TYPE AS ENUM (
  'CAUGHT',
  'PUNCHED',
  'PARRIED',
  'TIPPED'
);
CREATE TYPE TRANSFER_TYPE AS ENUM (
  'BUYOUT',
  'LOAN'
);
CREATE TYPE FOOT_TYPE AS ENUM (
  'RIGHT',
  'LEFT'
);

CREATE TABLE IF NOT EXISTS players (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  fullname VARCHAR(255) NOT NULL,
  name VARCHAR(255) NOT NULL,
  birth_place VARCHAR(255) NOT NULL,
  birth_date DATE NOT NULL,
  preferred_foot FOOT_TYPE NOT NULL,
  height FLOAT NOT NULL,
  weight FLOAT NOT NULL,
  national_team VARCHAR(255) DEFAULT NULL,
  can_be_elected VARCHAR(255)[] DEFAULT NULL,
  retired BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS teams (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  country VARCHAR(255) NOT NULL,
  is_national_team BOOLEAN NOT NULL DEFAULT FALSE
);
 
CREATE TABLE IF NOT EXISTS matches (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  team1 UUID NOT NULL REFERENCES teams(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  team2 UUID NOT NULL REFERENCES teams(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  place VARCHAR(255) NOT NULL,
  matchday VARCHAR(255) NOT NULL,
  scheduled TIMESTAMP NOT NULL,
  league LEAGUE NOT NULL,
  season VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS player_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  field VARCHAR(255) NOT NULL,
  value VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS player_stat_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  date_recorded DATE NOT NULL DEFAULT CURRENT_DATE,
  field VARCHAR(255),
  value FLOAT NOT NULL DEFAULT 0.0
);

CREATE TABLE IF NOT EXISTS player_soft_trait_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  date_recorded DATE NOT NULL DEFAULT CURRENT_DATE,
  field VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS player_transfer_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  team_from UUID REFERENCES teams(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  team_to UUID NOT NULL REFERENCES teams(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  start_date DATE NOT NULL,
  end_date DATE DEFAULT NULL,
  transfer_type TRANSFER_TYPE NOT NULL,
  value INTEGER NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS player_injury_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  start_date DATE NOT NULL DEFAULT CURRENT_DATE,
  end_date DATE DEFAULT NULL,
  name TEXT NOT NULL
);
 

CREATE TABLE IF NOT EXISTS pass_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  teammate UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7),
  x INTEGER DEFAULT NULL,
  y INTEGER DEFAULT NULL,
  touch TOUCH_TYPE DEFAULT NULL,
  type PASS_TYPE DEFAULT NULL,
  origin ORIGIN_TYPE DEFAULT NULL,
  distance INTEGER,
  is_completed BOOLEAN NOT NULL DEFAULT FALSE,
  is_assist BOOLEAN NOT NULL DEFAULT FALSE,
  is_key BOOLEAN NOT NULL DEFAULT FALSE,
  is_chance_created BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS shot_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7),
  touch TOUCH_TYPE DEFAULT NULL,
  origin ORIGIN_TYPE DEFAULT NULL,
  x INTEGER DEFAULT NULL,
  y INTEGER DEFAULT NULL,
  distance INTEGER,
  is_on_target BOOLEAN NOT NULL DEFAULT FALSE,
  is_goal BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS recovery_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  opponent UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7),
  touch TOUCH_TYPE DEFAULT NULL,
  recovery RECOVERY_TYPE DEFAULT NULL,
  x INTEGER DEFAULT NULL,
  y INTEGER DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS foul_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  opponent UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7),
  x INTEGER DEFAULT NULL,
  y INTEGER DEFAULT NULL,
  sanction CARD_TYPE DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS substitution_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  teammate UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7)
);

CREATE TABLE IF NOT EXISTS dribble_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  opponent UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7),
  x INTEGER DEFAULT NULL,
  y INTEGER DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS distance_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7),
  meters INTEGER,
  heatmap INTEGER[][] DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS sprint_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7),
  meters INTEGER,
  heatmap INTEGER[][] DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS save_logs (
  uuid UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  match UUID NOT NULL REFERENCES matches(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  player UUID NOT NULL REFERENCES players(uuid) ON DELETE CASCADE ON UPDATE CASCADE,
  minute VARCHAR(7),
  type SAVE_TYPE
);
